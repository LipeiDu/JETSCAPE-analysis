[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "jetscape_analysis"
authors = [
  { name = "James Mulligan", email = "james.mulligan@berkeley.edu" },
  { name = "Raymond Ehlers", email = "raymond.ehlers@cern.ch" },
]
description = "Basic JETSCAPE analysis code"
readme = "README.md"
license.file = "LICENSE"
requires-python = ">=3.9"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]
dynamic = ["version"]
dependencies = [
    "pyyaml >=5.1.2",
    "numba >=0.59",
    "h5py >=3.6.0",
    "tqdm >=4.37.0",
    "attrs >=20.3.0",
    "numpy >=1.17.3",
    "pandas >=2.0",
    "pyhepmc >=0.4.3",
    "pyarrow >=3.0.0",
    "awkward >=1.7.0",
    "uproot >=5.3",
    "matplotlib >=3.8",
]

[project.optional-dependencies]
dev = [
    "pytest >=6",
    "pytest-cov >=3",
    "pytest-sugar >=1.0.0",
    "pre-commit >=2.13.0",
    "ruff >=0.0.209",
    "mypy >=0.931",
]

[project.urls]
Homepage = "https://github.com/jdmulligan/JETSCAPE-analysis"
"Bug Tracker" = "https://github.com/jdmulligan/JETSCAPE-analysis/issues"
Discussions = "https://github.com/jdmulligan/JETSCAPE-analysis/discussions"
Changelog = "https://github.com/jdmulligan/JETSCAPE-analysis/releases"

[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "jetscape_analysis/_version.py"

[tool.mypy]
files = ["jetscape_analysis", "tests"]
python_version = "3.10"
warn_unused_configs = true
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = "jetscape_analysis.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = ["ROOT", "numba", "nox", "scipy.*"]
ignore_missing_imports = true

[tool.ruff]
src = ["jetscape_analysis"]
exclude = [
    "jetscape_analysis/_version.py",  # Automatically generated, so there's no point in linting it
    '.git',
    '.env',
    '.env3',
    '.venv',
    '.venv*',
    'env',
    '__pycache__',
    'bak',
    'build',
    'dist',
]
line-length = 120

[tool.ruff.lint]
extend-select = [
  "B",        # flake8-bugbear
  "I",        # isort
  "C901",     # mccabe
  "ARG",      # flake8-unused-arguments
  "C4",       # flake8-comprehensions
  "EM",       # flake8-errmsg
  "ICN",      # flake8-import-conventions
  "G",        # flake8-logging-format
  "PGH",      # pygrep-hooks
  "PIE",      # flake8-pie
  "PL",       # pylint
  "PT",       # flake8-pytest-style
  "PTH",      # flake8-use-pathlib
  "RET",      # flake8-return
  "RUF",      # Ruff-specific
  "SIM",      # flake8-simplify
  "T20",      # flake8-print
  "UP",       # pyupgrade
  "YTT",      # flake8-2020
  "EXE",      # flake8-executable
  "NPY",      # NumPy specific rules
]
ignore = [
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
  "ISC001",   # Conflicts with formatter
  "G004",     # Logging format string. This isn't best practices, but I use it too much to change for now
  "PLC0414",  # Messes with the re-export of imports needed from mypy
]
unfixable = [
  "T20",      # Removes print statements
  "F841",     # Removes unused variables
]

[tool.ruff.lint.mccabe]
max-complexity = 12

[tool.ruff.lint.isort]
#required-imports = ["from __future__ import annotations"]
known-third-party = ["ROOT", "common_base", "event", "fastjet", "fjext", "pyhepmc_ng", "reader", "tqdm", "yaml"]
known-first-party = ["heppy"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]
"noxfile.py" = ["T20"]


[tool.pylint]
py-version = "3.10"
ignore-paths = [".*/_version.py"]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
  "design",
  "fixme",
  "line-too-long",
  "missing-module-docstring",
  "wrong-import-position",
  "logging-fstring-interpolation",  # See above. I use it too much
]
